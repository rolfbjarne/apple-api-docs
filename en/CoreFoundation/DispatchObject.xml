<Type Name="DispatchObject" FullName="CoreFoundation.DispatchObject">
  <TypeSignature Language="C#" Value="public abstract class DispatchObject : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatchObject extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreFoundation.DispatchObject" />
  <TypeSignature Language="F#" Value="type DispatchObject = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="xamarin-ios-sdk-12">CoreFoundation.NativeObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Base class for dispatch objects.</summary>
    <remarks>
      <para>
	Dispatch objects share functions for coordinating memory management, suspension, cancellation and con-
	text pointers. While all dispatch objects are retainable, not all objects support suspension, context
	pointers or finalizers (currently only queues and sources support these additional interfaces).
      </para>
      <para>
	The invocation of blocks on dispatch queues or dispatch sources may be suspended or resumed with the
	methods <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Foundation%20Dispatch%20Object%20Suspend(%20)&amp;scope=Xamarin" title="M:CoreFoundation.DispatchObject.Suspend()">M:CoreFoundation.DispatchObject.Suspend()</a></format> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Foundation%20Dispatch%20Object%20Resume(%20)&amp;scope=Xamarin" title="M:CoreFoundation.DispatchObject.Resume()">M:CoreFoundation.DispatchObject.Resume()</a></format> respectively.  The dispatch framework always checks
	the suspension status before executing a block, but such changes never affect a block during execution
	(non-preemptive).  Therefore the suspension of an object is asynchronous, unless it is performed from
	the context of the target queue for the given object.  The result of suspending or resuming an object
	that is not a dispatch queue or a dispatch source is undefined.

      </para>
      <para>
	Important: suspension applies to all aspects of the dispatch
	object life cycle, including the finalizer function and
	cancellation handler. Therefore it is important to balance
	calls to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Foundation%20Dispatch%20Object%20Suspend(%20)&amp;scope=Xamarin" title="M:CoreFoundation.DispatchObject.Suspend()">M:CoreFoundation.DispatchObject.Suspend()</a></format>
	and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Foundation%20Dispatch%20Object%20Resume(%20)&amp;scope=Xamarin" title="M:CoreFoundation.DispatchObject.Resume()">M:CoreFoundation.DispatchObject.Resume()</a></format>
	such that the dispatch object is fully resumed when the last
	reference is released.  The result of releasing all references
	to a dispatch object while in a suspended state is undefined.

      </para>
      <para>
	Dispatch queues and sources support supplemental context pointers. The value of the context point may
	be retrieved and updated with the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Foundation%20Dispatch%20Object%20Context&amp;scope=Xamarin" title="P:CoreFoundation.DispatchObject.Context">P:CoreFoundation.DispatchObject.Context</a></format> property.  

      </para>
      <para>
	The result of getting or setting the context of an object that is not a dispatch queue or a dispatch
	source is undefined.	

      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Activate" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="dispatchObject.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="protected void Check ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Check() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Check" />
      <MemberSignature Language="F#" Value="member this.Check : unit -&gt; unit" Usage="dispatchObject.Check " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use 'GetCheckedHandle' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dispatchObject.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dispatchObject.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="xamarin-mac-sdk-14" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dispatchObject.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DispatchObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dispatchObject.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dispatchObject.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hashcode for this object</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreFoundation.DispatchObject.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreFoundation.DispatchObject.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (CoreFoundation.DispatchObject a, CoreFoundation.DispatchObject b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class CoreFoundation.DispatchObject a, class CoreFoundation.DispatchObject b) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.op_Equality(CoreFoundation.DispatchObject,CoreFoundation.DispatchObject)" />
      <MemberSignature Language="F#" Value="static member ( = ) : CoreFoundation.DispatchObject * CoreFoundation.DispatchObject -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CoreFoundation.DispatchObject" />
        <Parameter Name="b" Type="CoreFoundation.DispatchObject" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (CoreFoundation.DispatchObject a, CoreFoundation.DispatchObject b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class CoreFoundation.DispatchObject a, class CoreFoundation.DispatchObject b) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.op_Inequality(CoreFoundation.DispatchObject,CoreFoundation.DispatchObject)" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CoreFoundation.DispatchObject * CoreFoundation.DispatchObject -&gt; bool" Usage="CoreFoundation.DispatchObject.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CoreFoundation.DispatchObject" />
        <Parameter Name="b" Type="CoreFoundation.DispatchObject" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="protected override void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Release" />
      <MemberSignature Language="F#" Value="override this.Release : unit -&gt; unit" Usage="dispatchObject.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Retain">
      <MemberSignature Language="C#" Value="protected override void Retain ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Retain() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.Retain" />
      <MemberSignature Language="F#" Value="override this.Retain : unit -&gt; unit" Usage="dispatchObject.Retain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetQueue">
      <MemberSignature Language="C#" Value="public void SetTargetQueue (CoreFoundation.DispatchQueue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTargetQueue(class CoreFoundation.DispatchQueue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.DispatchObject.SetTargetQueue(CoreFoundation.DispatchQueue)" />
      <MemberSignature Language="F#" Value="member this.SetTargetQueue : CoreFoundation.DispatchQueue -&gt; unit" Usage="dispatchObject.SetTargetQueue queue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="CoreFoundation.DispatchQueue" />
      </Parameters>
      <Docs>
        <param name="queue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
