<Type Name="IPKDisbursementAuthorizationControllerDelegate" FullName="PassKit.IPKDisbursementAuthorizationControllerDelegate">
  <TypeSignature Language="C#" Value="public interface IPKDisbursementAuthorizationControllerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPKDisbursementAuthorizationControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:PassKit.IPKDisbursementAuthorizationControllerDelegate" />
  <TypeSignature Language="F#" Value="type IPKDisbursementAuthorizationControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="PKDisbursementAuthorizationControllerDelegate", WrapperType=typeof(PassKit.PKDisbursementAuthorizationControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidAuthorize", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKDisbursementAuthorizationController), typeof(PassKit.PKDisbursementVoucher) }, Selector="disbursementAuthorizationController:didAuthorizeWithDisbursementVoucher:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinish", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(PassKit.PKDisbursementAuthorizationController) }, Selector="disbursementAuthorizationControllerDidFinish:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DidAuthorize">
      <MemberSignature Language="C#" Value="public void DidAuthorize (PassKit.PKDisbursementAuthorizationController controller, PassKit.PKDisbursementVoucher disbursementVoucher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAuthorize(class PassKit.PKDisbursementAuthorizationController controller, class PassKit.PKDisbursementVoucher disbursementVoucher) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKDisbursementAuthorizationControllerDelegate.DidAuthorize(PassKit.PKDisbursementAuthorizationController,PassKit.PKDisbursementVoucher)" />
      <MemberSignature Language="F#" Value="abstract member DidAuthorize : PassKit.PKDisbursementAuthorizationController * PassKit.PKDisbursementVoucher -&gt; unit" Usage="iPKDisbursementAuthorizationControllerDelegate.DidAuthorize (controller, disbursementVoucher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disbursementAuthorizationController:didAuthorizeWithDisbursementVoucher:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKDisbursementAuthorizationController" />
        <Parameter Name="disbursementVoucher" Type="PassKit.PKDisbursementVoucher" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="disbursementVoucher">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinish">
      <MemberSignature Language="C#" Value="public void DidFinish (PassKit.PKDisbursementAuthorizationController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinish(class PassKit.PKDisbursementAuthorizationController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKDisbursementAuthorizationControllerDelegate.DidFinish(PassKit.PKDisbursementAuthorizationController)" />
      <MemberSignature Language="F#" Value="abstract member DidFinish : PassKit.PKDisbursementAuthorizationController -&gt; unit" Usage="iPKDisbursementAuthorizationControllerDelegate.DidFinish controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disbursementAuthorizationControllerDidFinish:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKDisbursementAuthorizationController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
