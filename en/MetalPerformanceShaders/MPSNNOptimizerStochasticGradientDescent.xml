<Type Name="MPSNNOptimizerStochasticGradientDescent" FullName="MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent">
  <TypeSignature Language="C#" Value="public class MPSNNOptimizerStochasticGradientDescent : MetalPerformanceShaders.MPSNNOptimizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSNNOptimizerStochasticGradientDescent extends MetalPerformanceShaders.MPSNNOptimizer" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent" />
  <TypeSignature Language="F#" Value="type MPSNNOptimizerStochasticGradientDescent = class&#xA;    inherit MPSNNOptimizer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSNNOptimizer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSNNOptimizerStochasticGradientDescent", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNOptimizerStochasticGradientDescent (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent : Foundation.NSCoder -&gt; MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent" Usage="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSNNOptimizerStochasticGradientDescent (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent" Usage="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSNNOptimizerStochasticGradientDescent (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent : nativeint -&gt; MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent" Usage="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNOptimizerStochasticGradientDescent (Metal.IMTLDevice device, float learningRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, float32 learningRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.#ctor(Metal.IMTLDevice,System.Single)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent : Metal.IMTLDevice * single -&gt; MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent" Usage="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent (device, learningRate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:learningRate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="learningRate" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="learningRate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNOptimizerStochasticGradientDescent (Metal.IMTLDevice device, float momentumScale, bool useNestrovMomentum, MetalPerformanceShaders.MPSNNOptimizerDescriptor optimizerDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, float32 momentumScale, bool useNestrovMomentum, class MetalPerformanceShaders.MPSNNOptimizerDescriptor optimizerDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.#ctor(Metal.IMTLDevice,System.Single,System.Boolean,MetalPerformanceShaders.MPSNNOptimizerDescriptor)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent : Metal.IMTLDevice * single * bool * MetalPerformanceShaders.MPSNNOptimizerDescriptor -&gt; MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent" Usage="new MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent (device, momentumScale, useNestrovMomentum, optimizerDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:momentumScale:useNestrovMomentum:optimizerDescriptor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="momentumScale" Type="System.Single" />
        <Parameter Name="useNestrovMomentum" Type="System.Boolean" />
        <Parameter Name="optimizerDescriptor" Type="MetalPerformanceShaders.MPSNNOptimizerDescriptor" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="momentumScale">To be added.</param>
        <param name="useNestrovMomentum">To be added.</param>
        <param name="optimizerDescriptor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, class MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnBatchNormalizationState,Foundation.NSArray{MetalPerformanceShaders.MPSVector},MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit" Usage="mPSNNOptimizerStochasticGradientDescent.Encode (commandBuffer, batchNormalizationState, inputMomentumVectors, resultState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:batchNormalizationState:inputMomentumVectors:resultState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="batchNormalizationState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="inputMomentumVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="resultState" Type="MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="batchNormalizationState">To be added.</param>
        <param name="inputMomentumVectors">To be added.</param>
        <param name="resultState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationGradientState, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationSourceState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationGradientState, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationSourceState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, class MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnBatchNormalizationState,MetalPerformanceShaders.MPSCnnBatchNormalizationState,Foundation.NSArray{MetalPerformanceShaders.MPSVector},MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit" Usage="mPSNNOptimizerStochasticGradientDescent.Encode (commandBuffer, batchNormalizationGradientState, batchNormalizationSourceState, inputMomentumVectors, resultState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:batchNormalizationGradientState:batchNormalizationSourceState:inputMomentumVectors:resultState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="batchNormalizationGradientState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="batchNormalizationSourceState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="inputMomentumVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="resultState" Type="MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="batchNormalizationGradientState">To be added.</param>
        <param name="batchNormalizationSourceState">To be added.</param>
        <param name="inputMomentumVectors">To be added.</param>
        <param name="resultState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnConvolutionGradientState convolutionGradientState, MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState convolutionSourceState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnConvolutionGradientState convolutionGradientState, class MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState convolutionSourceState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, class MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState resultState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnConvolutionGradientState,MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState,Foundation.NSArray{MetalPerformanceShaders.MPSVector},MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnConvolutionGradientState * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnConvolutionGradientState * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState -&gt; unit" Usage="mPSNNOptimizerStochasticGradientDescent.Encode (commandBuffer, convolutionGradientState, convolutionSourceState, inputMomentumVectors, resultState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:convolutionGradientState:convolutionSourceState:inputMomentumVectors:resultState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="convolutionGradientState" Type="MetalPerformanceShaders.MPSCnnConvolutionGradientState" />
        <Parameter Name="convolutionSourceState" Type="MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState" />
        <Parameter Name="inputMomentumVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="resultState" Type="MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="convolutionGradientState">To be added.</param>
        <param name="convolutionSourceState">To be added.</param>
        <param name="inputMomentumVectors">To be added.</param>
        <param name="resultState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSVector inputGradientVector, MetalPerformanceShaders.MPSVector inputValuesVector, MetalPerformanceShaders.MPSVector inputMomentumVector, MetalPerformanceShaders.MPSVector resultValuesVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSVector inputGradientVector, class MetalPerformanceShaders.MPSVector inputValuesVector, class MetalPerformanceShaders.MPSVector inputMomentumVector, class MetalPerformanceShaders.MPSVector resultValuesVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector -&gt; unit" Usage="mPSNNOptimizerStochasticGradientDescent.Encode (commandBuffer, inputGradientVector, inputValuesVector, inputMomentumVector, resultValuesVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:inputGradientVector:inputValuesVector:inputMomentumVector:resultValuesVector:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="inputGradientVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="inputValuesVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="inputMomentumVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="resultValuesVector" Type="MetalPerformanceShaders.MPSVector" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="inputGradientVector">To be added.</param>
        <param name="inputValuesVector">To be added.</param>
        <param name="inputMomentumVector">To be added.</param>
        <param name="resultValuesVector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MomentumScale">
      <MemberSignature Language="C#" Value="public virtual float MomentumScale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MomentumScale" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.MomentumScale" />
      <MemberSignature Language="F#" Value="member this.MomentumScale : single" Usage="MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.MomentumScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("momentumScale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNestrovMomentum">
      <MemberSignature Language="C#" Value="public virtual bool UseNestrovMomentum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNestrovMomentum" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.UseNestrovMomentum" />
      <MemberSignature Language="F#" Value="member this.UseNestrovMomentum : bool" Usage="MetalPerformanceShaders.MPSNNOptimizerStochasticGradientDescent.UseNestrovMomentum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("useNestrovMomentum")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
