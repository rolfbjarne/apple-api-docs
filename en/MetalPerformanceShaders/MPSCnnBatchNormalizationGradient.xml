<Type Name="MPSCnnBatchNormalizationGradient" FullName="MetalPerformanceShaders.MPSCnnBatchNormalizationGradient">
  <TypeSignature Language="C#" Value="public class MPSCnnBatchNormalizationGradient : MetalPerformanceShaders.MPSCnnGradientKernel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSCnnBatchNormalizationGradient extends MetalPerformanceShaders.MPSCnnGradientKernel" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient" />
  <TypeSignature Language="F#" Value="type MPSCnnBatchNormalizationGradient = class&#xA;    inherit MPSCnnGradientKernel" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSCnnGradientKernel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSCNNBatchNormalizationGradient", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnBatchNormalizationGradient (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient : Foundation.NSCoder -&gt; MetalPerformanceShaders.MPSCnnBatchNormalizationGradient" Usage="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSCnnBatchNormalizationGradient (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSCnnBatchNormalizationGradient" Usage="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSCnnBatchNormalizationGradient (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient : nativeint -&gt; MetalPerformanceShaders.MPSCnnBatchNormalizationGradient" Usage="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnBatchNormalizationGradient (Foundation.NSCoder decoder, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder decoder, class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.#ctor(Foundation.NSCoder,Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient : Foundation.NSCoder * Metal.IMTLDevice -&gt; MetalPerformanceShaders.MPSCnnBatchNormalizationGradient" Usage="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient (decoder, device)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="decoder" Type="Foundation.NSCoder" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="decoder">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnBatchNormalizationGradient (Metal.IMTLDevice device, MetalPerformanceShaders.MPSNNNeuronDescriptor fusedNeuronDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, class MetalPerformanceShaders.MPSNNNeuronDescriptor fusedNeuronDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.#ctor(Metal.IMTLDevice,MetalPerformanceShaders.MPSNNNeuronDescriptor)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient : Metal.IMTLDevice * MetalPerformanceShaders.MPSNNNeuronDescriptor -&gt; MetalPerformanceShaders.MPSCnnBatchNormalizationGradient" Usage="new MetalPerformanceShaders.MPSCnnBatchNormalizationGradient (device, fusedNeuronDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:fusedNeuronDescriptor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="fusedNeuronDescriptor" Type="MetalPerformanceShaders.MPSNNNeuronDescriptor" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="fusedNeuronDescriptor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage sourceGradient, MetalPerformanceShaders.MPSImage sourceImage, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSImage Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage sourceGradient, class MetalPerformanceShaders.MPSImage sourceImage, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSCnnBatchNormalizationState)" />
      <MemberSignature Language="F#" Value="override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSCnnBatchNormalizationState -&gt; MetalPerformanceShaders.MPSImage" Usage="mPSCnnBatchNormalizationGradient.Encode (commandBuffer, sourceGradient, sourceImage, batchNormalizationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:sourceGradient:sourceImage:batchNormalizationState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradient" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="sourceImage" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="batchNormalizationState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradient">To be added.</param>
        <param name="sourceImage">To be added.</param>
        <param name="batchNormalizationState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage sourceGradient, MetalPerformanceShaders.MPSImage sourceImage, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, MetalPerformanceShaders.MPSImage destinationGradient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage sourceGradient, class MetalPerformanceShaders.MPSImage sourceImage, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, class MetalPerformanceShaders.MPSImage destinationGradient) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSCnnBatchNormalizationState,MetalPerformanceShaders.MPSImage)" />
      <MemberSignature Language="F#" Value="override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSCnnBatchNormalizationState * MetalPerformanceShaders.MPSImage -&gt; unit" Usage="mPSCnnBatchNormalizationGradient.Encode (commandBuffer, sourceGradient, sourceImage, batchNormalizationState, destinationGradient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:sourceGradient:sourceImage:batchNormalizationState:destinationGradient:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradient" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="sourceImage" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="batchNormalizationState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="destinationGradient" Type="MetalPerformanceShaders.MPSImage" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradient">To be added.</param>
        <param name="sourceImage">To be added.</param>
        <param name="batchNormalizationState">To be added.</param>
        <param name="destinationGradient">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeBatch">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; EncodeBatch (Metal.IMTLCommandBuffer commandBuffer, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceGradients, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceImages, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; EncodeBatch(class Metal.IMTLCommandBuffer commandBuffer, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceGradients, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceImages, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.EncodeBatch(Metal.IMTLCommandBuffer,Foundation.NSArray{MetalPerformanceShaders.MPSImage},Foundation.NSArray{MetalPerformanceShaders.MPSImage},MetalPerformanceShaders.MPSCnnBatchNormalizationState)" />
      <MemberSignature Language="F#" Value="override this.EncodeBatch : Metal.IMTLCommandBuffer * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * MetalPerformanceShaders.MPSCnnBatchNormalizationState -&gt; Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" Usage="mPSCnnBatchNormalizationGradient.EncodeBatch (commandBuffer, sourceGradients, sourceImages, batchNormalizationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBatchToCommandBuffer:sourceGradients:sourceImages:batchNormalizationState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradients" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="sourceImages" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="batchNormalizationState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradients">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <param name="batchNormalizationState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeBatch">
      <MemberSignature Language="C#" Value="public virtual void EncodeBatch (Metal.IMTLCommandBuffer commandBuffer, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceGradients, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceImages, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; destinationGradients);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeBatch(class Metal.IMTLCommandBuffer commandBuffer, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceGradients, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceImages, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; destinationGradients) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnBatchNormalizationGradient.EncodeBatch(Metal.IMTLCommandBuffer,Foundation.NSArray{MetalPerformanceShaders.MPSImage},Foundation.NSArray{MetalPerformanceShaders.MPSImage},MetalPerformanceShaders.MPSCnnBatchNormalizationState,Foundation.NSArray{MetalPerformanceShaders.MPSImage})" />
      <MemberSignature Language="F#" Value="override this.EncodeBatch : Metal.IMTLCommandBuffer * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; -&gt; unit" Usage="mPSCnnBatchNormalizationGradient.EncodeBatch (commandBuffer, sourceGradients, sourceImages, batchNormalizationState, destinationGradients)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBatchToCommandBuffer:sourceGradients:sourceImages:batchNormalizationState:destinationGradients:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradients" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="sourceImages" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="batchNormalizationState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="destinationGradients" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradients">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <param name="batchNormalizationState">To be added.</param>
        <param name="destinationGradients">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
