<Type Name="MPSNNOptimizerAdam" FullName="MetalPerformanceShaders.MPSNNOptimizerAdam">
  <TypeSignature Language="C#" Value="public class MPSNNOptimizerAdam : MetalPerformanceShaders.MPSNNOptimizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSNNOptimizerAdam extends MetalPerformanceShaders.MPSNNOptimizer" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSNNOptimizerAdam" />
  <TypeSignature Language="F#" Value="type MPSNNOptimizerAdam = class&#xA;    inherit MPSNNOptimizer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSNNOptimizer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSNNOptimizerAdam", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNOptimizerAdam (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerAdam : Foundation.NSCoder -&gt; MetalPerformanceShaders.MPSNNOptimizerAdam" Usage="new MetalPerformanceShaders.MPSNNOptimizerAdam coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSNNOptimizerAdam (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerAdam : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSNNOptimizerAdam" Usage="new MetalPerformanceShaders.MPSNNOptimizerAdam t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSNNOptimizerAdam (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerAdam : nativeint -&gt; MetalPerformanceShaders.MPSNNOptimizerAdam" Usage="new MetalPerformanceShaders.MPSNNOptimizerAdam handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNOptimizerAdam (Metal.IMTLDevice device, float learningRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, float32 learningRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.#ctor(Metal.IMTLDevice,System.Single)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerAdam : Metal.IMTLDevice * single -&gt; MetalPerformanceShaders.MPSNNOptimizerAdam" Usage="new MetalPerformanceShaders.MPSNNOptimizerAdam (device, learningRate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:learningRate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="learningRate" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="learningRate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNOptimizerAdam (Metal.IMTLDevice device, double beta1, double beta2, float epsilon, nuint timeStep, MetalPerformanceShaders.MPSNNOptimizerDescriptor optimizerDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, float64 beta1, float64 beta2, float32 epsilon, valuetype System.nuint timeStep, class MetalPerformanceShaders.MPSNNOptimizerDescriptor optimizerDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.#ctor(Metal.IMTLDevice,System.Double,System.Double,System.Single,System.nuint,MetalPerformanceShaders.MPSNNOptimizerDescriptor)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSNNOptimizerAdam : Metal.IMTLDevice * double * double * single * nuint * MetalPerformanceShaders.MPSNNOptimizerDescriptor -&gt; MetalPerformanceShaders.MPSNNOptimizerAdam" Usage="new MetalPerformanceShaders.MPSNNOptimizerAdam (device, beta1, beta2, epsilon, timeStep, optimizerDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:beta1:beta2:epsilon:timeStep:optimizerDescriptor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="beta1" Type="System.Double" />
        <Parameter Name="beta2" Type="System.Double" />
        <Parameter Name="epsilon" Type="System.Single" />
        <Parameter Name="timeStep" Type="System.nuint" />
        <Parameter Name="optimizerDescriptor" Type="MetalPerformanceShaders.MPSNNOptimizerDescriptor" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="beta1">To be added.</param>
        <param name="beta2">To be added.</param>
        <param name="epsilon">To be added.</param>
        <param name="timeStep">To be added.</param>
        <param name="optimizerDescriptor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta1">
      <MemberSignature Language="C#" Value="public virtual double Beta1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Beta1" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerAdam.Beta1" />
      <MemberSignature Language="F#" Value="member this.Beta1 : double" Usage="MetalPerformanceShaders.MPSNNOptimizerAdam.Beta1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("beta1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta2">
      <MemberSignature Language="C#" Value="public virtual double Beta2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Beta2" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerAdam.Beta2" />
      <MemberSignature Language="F#" Value="member this.Beta2 : double" Usage="MetalPerformanceShaders.MPSNNOptimizerAdam.Beta2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerAdam.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="MetalPerformanceShaders.MPSNNOptimizerAdam.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputVelocityVectors, MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputVelocityVectors, class MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnBatchNormalizationState,Foundation.NSArray{MetalPerformanceShaders.MPSVector},Foundation.NSArray{MetalPerformanceShaders.MPSVector},MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit" Usage="mPSNNOptimizerAdam.Encode (commandBuffer, batchNormalizationState, inputMomentumVectors, inputVelocityVectors, resultState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:batchNormalizationState:inputMomentumVectors:inputVelocityVectors:resultState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="batchNormalizationState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="inputMomentumVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="inputVelocityVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="resultState" Type="MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="batchNormalizationState">To be added.</param>
        <param name="inputMomentumVectors">To be added.</param>
        <param name="inputVelocityVectors">To be added.</param>
        <param name="resultState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationGradientState, MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationSourceState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputVelocityVectors, MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationGradientState, class MetalPerformanceShaders.MPSCnnBatchNormalizationState batchNormalizationSourceState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputVelocityVectors, class MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState resultState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnBatchNormalizationState,MetalPerformanceShaders.MPSCnnBatchNormalizationState,Foundation.NSArray{MetalPerformanceShaders.MPSVector},Foundation.NSArray{MetalPerformanceShaders.MPSVector},MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnBatchNormalizationState * MetalPerformanceShaders.MPSCnnBatchNormalizationState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState -&gt; unit" Usage="mPSNNOptimizerAdam.Encode (commandBuffer, batchNormalizationGradientState, batchNormalizationSourceState, inputMomentumVectors, inputVelocityVectors, resultState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:batchNormalizationGradientState:batchNormalizationSourceState:inputMomentumVectors:inputVelocityVectors:resultState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="batchNormalizationGradientState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="batchNormalizationSourceState" Type="MetalPerformanceShaders.MPSCnnBatchNormalizationState" />
        <Parameter Name="inputMomentumVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="inputVelocityVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="resultState" Type="MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="batchNormalizationGradientState">To be added.</param>
        <param name="batchNormalizationSourceState">To be added.</param>
        <param name="inputMomentumVectors">To be added.</param>
        <param name="inputVelocityVectors">To be added.</param>
        <param name="resultState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnConvolutionGradientState convolutionGradientState, MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState convolutionSourceState, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; inputVelocityVectors, MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnConvolutionGradientState convolutionGradientState, class MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState convolutionSourceState, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputMomentumVectors, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSVector&gt; inputVelocityVectors, class MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState resultState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnConvolutionGradientState,MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState,Foundation.NSArray{MetalPerformanceShaders.MPSVector},Foundation.NSArray{MetalPerformanceShaders.MPSVector},MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnConvolutionGradientState * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnConvolutionGradientState * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt; * MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState -&gt; unit" Usage="mPSNNOptimizerAdam.Encode (commandBuffer, convolutionGradientState, convolutionSourceState, inputMomentumVectors, inputVelocityVectors, resultState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:convolutionGradientState:convolutionSourceState:inputMomentumVectors:inputVelocityVectors:resultState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="convolutionGradientState" Type="MetalPerformanceShaders.MPSCnnConvolutionGradientState" />
        <Parameter Name="convolutionSourceState" Type="MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState" />
        <Parameter Name="inputMomentumVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="inputVelocityVectors" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSVector&gt;" />
        <Parameter Name="resultState" Type="MetalPerformanceShaders.MPSCnnConvolutionWeightsAndBiasesState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="convolutionGradientState">To be added.</param>
        <param name="convolutionSourceState">To be added.</param>
        <param name="inputMomentumVectors">To be added.</param>
        <param name="inputVelocityVectors">To be added.</param>
        <param name="resultState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSVector inputGradientVector, MetalPerformanceShaders.MPSVector inputValuesVector, MetalPerformanceShaders.MPSVector inputMomentumVector, MetalPerformanceShaders.MPSVector inputVelocityVector, MetalPerformanceShaders.MPSVector resultValuesVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSVector inputGradientVector, class MetalPerformanceShaders.MPSVector inputValuesVector, class MetalPerformanceShaders.MPSVector inputMomentumVector, class MetalPerformanceShaders.MPSVector inputVelocityVector, class MetalPerformanceShaders.MPSVector resultValuesVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSNNOptimizerAdam.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector,MetalPerformanceShaders.MPSVector)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector * MetalPerformanceShaders.MPSVector -&gt; unit" Usage="mPSNNOptimizerAdam.Encode (commandBuffer, inputGradientVector, inputValuesVector, inputMomentumVector, inputVelocityVector, resultValuesVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:inputGradientVector:inputValuesVector:inputMomentumVector:inputVelocityVector:resultValuesVector:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="inputGradientVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="inputValuesVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="inputMomentumVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="inputVelocityVector" Type="MetalPerformanceShaders.MPSVector" />
        <Parameter Name="resultValuesVector" Type="MetalPerformanceShaders.MPSVector" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="inputGradientVector">To be added.</param>
        <param name="inputValuesVector">To be added.</param>
        <param name="inputMomentumVector">To be added.</param>
        <param name="inputVelocityVector">To be added.</param>
        <param name="resultValuesVector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public virtual float Epsilon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Epsilon" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerAdam.Epsilon" />
      <MemberSignature Language="F#" Value="member this.Epsilon : single" Usage="MetalPerformanceShaders.MPSNNOptimizerAdam.Epsilon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("epsilon")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeStep">
      <MemberSignature Language="C#" Value="public virtual nuint TimeStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint TimeStep" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSNNOptimizerAdam.TimeStep" />
      <MemberSignature Language="F#" Value="member this.TimeStep : nuint with get, set" Usage="MetalPerformanceShaders.MPSNNOptimizerAdam.TimeStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("timeStep")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTimeStep:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
