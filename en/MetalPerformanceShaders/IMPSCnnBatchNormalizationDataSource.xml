<Type Name="IMPSCnnBatchNormalizationDataSource" FullName="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource">
  <TypeSignature Language="C#" Value="public interface IMPSCnnBatchNormalizationDataSource : Foundation.INSCopying, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMPSCnnBatchNormalizationDataSource implements class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource" />
  <TypeSignature Language="F#" Value="type IMPSCnnBatchNormalizationDataSource = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MPSCNNBatchNormalizationDataSource", WrapperType=typeof(MetalPerformanceShaders.MPSCnnBatchNormalizationDataSourceWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="Purge", Selector="purge")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdateGammaAndBeta", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Metal.IMTLCommandBuffer), typeof(MetalPerformanceShaders.MPSCnnBatchNormalizationState) }, ReturnType=typeof(MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState), Selector="updateGammaAndBetaWithCommandBuffer:batchNormalizationState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdateMeanAndVariance", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Metal.IMTLCommandBuffer), typeof(MetalPerformanceShaders.MPSCnnBatchNormalizationState) }, ReturnType=typeof(MetalPerformanceShaders.MPSCnnNormalizationMeanAndVarianceState), Selector="updateMeanAndVarianceWithCommandBuffer:batchNormalizationState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdateGammaAndBeta", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(MetalPerformanceShaders.MPSCnnBatchNormalizationState) }, ReturnType=typeof(System.Boolean), Selector="updateGammaAndBetaWithBatchNormalizationState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdateMeanAndVariance", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(MetalPerformanceShaders.MPSCnnBatchNormalizationState) }, ReturnType=typeof(System.Boolean), Selector="updateMeanAndVarianceWithBatchNormalizationState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="Encode", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSCoder) }, Selector="encodeWithCoder:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="Copy", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSZone), typeof(Metal.IMTLDevice) }, ReturnType=typeof(MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource), Selector="copyWithZone:device:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="numberOfFeatureChannels", IsProperty=true, IsRequired=true, IsStatic=false, Name="NumberOfFeatureChannels", PropertyType=typeof(System.nuint), Selector="numberOfFeatureChannels")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="gamma", IsProperty=true, IsRequired=true, IsStatic=false, Name="Gamma", PropertyType=typeof(System.IntPtr), Selector="gamma")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="beta", IsProperty=true, IsRequired=true, IsStatic=false, Name="Beta", PropertyType=typeof(System.IntPtr), Selector="beta")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="mean", IsProperty=true, IsRequired=true, IsStatic=false, Name="Mean", PropertyType=typeof(System.IntPtr), Selector="mean")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="variance", IsProperty=true, IsRequired=true, IsStatic=false, Name="Variance", PropertyType=typeof(System.IntPtr), Selector="variance")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="load", IsProperty=true, IsRequired=true, IsStatic=false, Name="Load", PropertyType=typeof(System.Boolean), Selector="load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="label", IsProperty=true, IsRequired=true, IsStatic=false, Name="Label", PropertyType=typeof(System.String), Selector="label")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="epsilon", IsProperty=true, IsRequired=false, IsStatic=false, Name="Epsilon", PropertyType=typeof(System.Single), Selector="epsilon")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="supportsSecureCoding", IsProperty=true, IsRequired=false, IsStatic=true, Name="SupportsSecureCoding", PropertyType=typeof(System.Boolean), Selector="supportsSecureCoding")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public IntPtr Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Beta" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Beta" />
      <MemberSignature Language="F#" Value="member this.Beta : nativeint" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("beta")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma">
      <MemberSignature Language="C#" Value="public IntPtr Gamma { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Gamma" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Gamma" />
      <MemberSignature Language="F#" Value="member this.Gamma : nativeint" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Gamma" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("gamma")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Label" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("label")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Load" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Load" />
      <MemberSignature Language="F#" Value="member this.Load : bool" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Load" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("load")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public IntPtr Mean { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Mean" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Mean" />
      <MemberSignature Language="F#" Value="member this.Mean : nativeint" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Mean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("mean")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfFeatureChannels">
      <MemberSignature Language="C#" Value="public nuint NumberOfFeatureChannels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfFeatureChannels" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.NumberOfFeatureChannels" />
      <MemberSignature Language="F#" Value="member this.NumberOfFeatureChannels : nuint" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.NumberOfFeatureChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("numberOfFeatureChannels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Purge" />
      <MemberSignature Language="F#" Value="abstract member Purge : unit -&gt; unit" Usage="iMPSCnnBatchNormalizationDataSource.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("purge")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public IntPtr Variance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Variance" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Variance" />
      <MemberSignature Language="F#" Value="member this.Variance : nativeint" Usage="MetalPerformanceShaders.IMPSCnnBatchNormalizationDataSource.Variance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("variance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
