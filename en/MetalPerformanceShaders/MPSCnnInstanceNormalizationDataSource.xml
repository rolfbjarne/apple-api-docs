<Type Name="MPSCnnInstanceNormalizationDataSource" FullName="MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource">
  <TypeSignature Language="C#" Value="public abstract class MPSCnnInstanceNormalizationDataSource : Foundation.NSObject, IDisposable, MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MPSCnnInstanceNormalizationDataSource extends Foundation.NSObject implements class Foundation.INSCopying, class MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource" />
  <TypeSignature Language="F#" Value="type MPSCnnInstanceNormalizationDataSource = class&#xA;    inherit NSObject&#xA;    interface IMPSCnnInstanceNormalizationDataSource&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("Xamarin_iOS__MetalPerformanceShaders_MPSCnnInstanceNormalizationDataSource", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSCnnInstanceNormalizationDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnInstanceNormalizationDataSource (Foundation.NSCoder decoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource : Foundation.NSCoder -&gt; MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource" Usage="new MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource decoder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="decoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="decoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSCnnInstanceNormalizationDataSource (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource" Usage="new MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSCnnInstanceNormalizationDataSource (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource : nativeint -&gt; MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource" Usage="new MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public abstract IntPtr Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Beta" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Beta" />
      <MemberSignature Language="F#" Value="member this.Beta : nativeint" Usage="MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Beta" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource.Beta</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("beta")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="mPSCnnInstanceNormalizationDataSource.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource Copy (Foundation.NSZone zone, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource Copy(class Foundation.NSZone zone, class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Copy(Foundation.NSZone,Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone * Metal.IMTLDevice -&gt; MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource" Usage="mPSCnnInstanceNormalizationDataSource.Copy (zone, device)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>ObjCRuntime.Release</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Encode(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Foundation.NSCoder -&gt; unit&#xA;override this.Encode : Foundation.NSCoder -&gt; unit" Usage="mPSCnnInstanceNormalizationDataSource.Encode coder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma">
      <MemberSignature Language="C#" Value="public abstract IntPtr Gamma { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Gamma" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Gamma" />
      <MemberSignature Language="F#" Value="member this.Gamma : nativeint" Usage="MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Gamma" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource.Gamma</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("gamma")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEpsilon">
      <MemberSignature Language="C#" Value="public virtual float GetEpsilon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetEpsilon() cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.GetEpsilon" />
      <MemberSignature Language="F#" Value="abstract member GetEpsilon : unit -&gt; single&#xA;override this.GetEpsilon : unit -&gt; single" Usage="mPSCnnInstanceNormalizationDataSource.GetEpsilon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("epsilon")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public abstract string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Label" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.Label" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource.Label</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("label")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfFeatureChannels">
      <MemberSignature Language="C#" Value="public abstract nuint NumberOfFeatureChannels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfFeatureChannels" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.NumberOfFeatureChannels" />
      <MemberSignature Language="F#" Value="member this.NumberOfFeatureChannels : nuint" Usage="MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.NumberOfFeatureChannels" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MetalPerformanceShaders.IMPSCnnInstanceNormalizationDataSource.NumberOfFeatureChannels</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("numberOfFeatureChannels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateGammaAndBeta">
      <MemberSignature Language="C#" Value="public virtual bool UpdateGammaAndBeta (MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] instanceNormalizationStateBatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UpdateGammaAndBeta(class MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] instanceNormalizationStateBatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.UpdateGammaAndBeta(MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[])" />
      <MemberSignature Language="F#" Value="abstract member UpdateGammaAndBeta : MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] -&gt; bool&#xA;override this.UpdateGammaAndBeta : MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] -&gt; bool" Usage="mPSCnnInstanceNormalizationDataSource.UpdateGammaAndBeta instanceNormalizationStateBatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateGammaAndBetaWithInstanceNormalizationStateBatch:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceNormalizationStateBatch" Type="MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[]" />
      </Parameters>
      <Docs>
        <param name="instanceNormalizationStateBatch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateGammaAndBeta">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState UpdateGammaAndBeta (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] instanceNormalizationStateBatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState UpdateGammaAndBeta(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] instanceNormalizationStateBatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnInstanceNormalizationDataSource.UpdateGammaAndBeta(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[])" />
      <MemberSignature Language="F#" Value="abstract member UpdateGammaAndBeta : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] -&gt; MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState&#xA;override this.UpdateGammaAndBeta : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[] -&gt; MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState" Usage="mPSCnnInstanceNormalizationDataSource.UpdateGammaAndBeta (commandBuffer, instanceNormalizationStateBatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("updateGammaAndBetaWithCommandBuffer:instanceNormalizationStateBatch:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSCnnNormalizationGammaAndBetaState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="instanceNormalizationStateBatch" Type="MetalPerformanceShaders.MPSCnnInstanceNormalizationGradientState[]" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="instanceNormalizationStateBatch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
