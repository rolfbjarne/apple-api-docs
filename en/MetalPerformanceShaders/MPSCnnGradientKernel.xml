<Type Name="MPSCnnGradientKernel" FullName="MetalPerformanceShaders.MPSCnnGradientKernel">
  <TypeSignature Language="C#" Value="public class MPSCnnGradientKernel : MetalPerformanceShaders.MPSCnnBinaryKernel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSCnnGradientKernel extends MetalPerformanceShaders.MPSCnnBinaryKernel" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSCnnGradientKernel" />
  <TypeSignature Language="F#" Value="type MPSCnnGradientKernel = class&#xA;    inherit MPSCnnBinaryKernel" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSCnnBinaryKernel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSCNNGradientKernel", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnGradientKernel (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnGradientKernel : Foundation.NSCoder -&gt; MetalPerformanceShaders.MPSCnnGradientKernel" Usage="new MetalPerformanceShaders.MPSCnnGradientKernel coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSCnnGradientKernel (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnGradientKernel : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSCnnGradientKernel" Usage="new MetalPerformanceShaders.MPSCnnGradientKernel t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnGradientKernel (Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.#ctor(Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnGradientKernel : Metal.IMTLDevice -&gt; MetalPerformanceShaders.MPSCnnGradientKernel" Usage="new MetalPerformanceShaders.MPSCnnGradientKernel device" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSCnnGradientKernel (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnGradientKernel : nativeint -&gt; MetalPerformanceShaders.MPSCnnGradientKernel" Usage="new MetalPerformanceShaders.MPSCnnGradientKernel handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSCnnGradientKernel (Foundation.NSCoder decoder, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder decoder, class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.#ctor(Foundation.NSCoder,Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSCnnGradientKernel : Foundation.NSCoder * Metal.IMTLDevice -&gt; MetalPerformanceShaders.MPSCnnGradientKernel" Usage="new MetalPerformanceShaders.MPSCnnGradientKernel (decoder, device)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="decoder" Type="Foundation.NSCoder" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="decoder">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnGradientKernel.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="MetalPerformanceShaders.MPSCnnGradientKernel.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage sourceGradient, MetalPerformanceShaders.MPSImage sourceImage, MetalPerformanceShaders.MPSState gradientState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSImage Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage sourceGradient, class MetalPerformanceShaders.MPSImage sourceImage, class MetalPerformanceShaders.MPSState gradientState) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSState)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSState -&gt; MetalPerformanceShaders.MPSImage&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSState -&gt; MetalPerformanceShaders.MPSImage" Usage="mPSCnnGradientKernel.Encode (commandBuffer, sourceGradient, sourceImage, gradientState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:sourceGradient:sourceImage:gradientState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradient" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="sourceImage" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="gradientState" Type="MetalPerformanceShaders.MPSState" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradient">To be added.</param>
        <param name="sourceImage">To be added.</param>
        <param name="gradientState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage sourceGradient, MetalPerformanceShaders.MPSImage sourceImage, MetalPerformanceShaders.MPSState gradientState, MetalPerformanceShaders.MPSImage destinationGradient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage sourceGradient, class MetalPerformanceShaders.MPSImage sourceImage, class MetalPerformanceShaders.MPSState gradientState, class MetalPerformanceShaders.MPSImage destinationGradient) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.Encode(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSImage,MetalPerformanceShaders.MPSState,MetalPerformanceShaders.MPSImage)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSState * MetalPerformanceShaders.MPSImage -&gt; unit&#xA;override this.Encode : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSImage * MetalPerformanceShaders.MPSState * MetalPerformanceShaders.MPSImage -&gt; unit" Usage="mPSCnnGradientKernel.Encode (commandBuffer, sourceGradient, sourceImage, gradientState, destinationGradient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:sourceGradient:sourceImage:gradientState:destinationGradient:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradient" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="sourceImage" Type="MetalPerformanceShaders.MPSImage" />
        <Parameter Name="gradientState" Type="MetalPerformanceShaders.MPSState" />
        <Parameter Name="destinationGradient" Type="MetalPerformanceShaders.MPSImage" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradient">To be added.</param>
        <param name="sourceImage">To be added.</param>
        <param name="gradientState">To be added.</param>
        <param name="destinationGradient">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeBatch">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; EncodeBatch (Metal.IMTLCommandBuffer commandBuffer, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceGradients, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceImages, Foundation.NSArray&lt;MetalPerformanceShaders.MPSState&gt; gradientStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; EncodeBatch(class Metal.IMTLCommandBuffer commandBuffer, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceGradients, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceImages, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSState&gt; gradientStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.EncodeBatch(Metal.IMTLCommandBuffer,Foundation.NSArray{MetalPerformanceShaders.MPSImage},Foundation.NSArray{MetalPerformanceShaders.MPSImage},Foundation.NSArray{MetalPerformanceShaders.MPSState})" />
      <MemberSignature Language="F#" Value="override this.EncodeBatch : Metal.IMTLCommandBuffer * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSState&gt; -&gt; Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" Usage="mPSCnnGradientKernel.EncodeBatch (commandBuffer, sourceGradients, sourceImages, gradientStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBatchToCommandBuffer:sourceGradients:sourceImages:gradientStates:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradients" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="sourceImages" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="gradientStates" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSState&gt;" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradients">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <param name="gradientStates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeBatch">
      <MemberSignature Language="C#" Value="public virtual void EncodeBatch (Metal.IMTLCommandBuffer commandBuffer, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceGradients, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; sourceImages, Foundation.NSArray&lt;MetalPerformanceShaders.MPSState&gt; gradientStates, Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; destinationGradients);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeBatch(class Metal.IMTLCommandBuffer commandBuffer, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceGradients, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; sourceImages, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSState&gt; gradientStates, class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; destinationGradients) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSCnnGradientKernel.EncodeBatch(Metal.IMTLCommandBuffer,Foundation.NSArray{MetalPerformanceShaders.MPSImage},Foundation.NSArray{MetalPerformanceShaders.MPSImage},Foundation.NSArray{MetalPerformanceShaders.MPSState},Foundation.NSArray{MetalPerformanceShaders.MPSImage})" />
      <MemberSignature Language="F#" Value="override this.EncodeBatch : Metal.IMTLCommandBuffer * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSState&gt; * Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; -&gt; unit" Usage="mPSCnnGradientKernel.EncodeBatch (commandBuffer, sourceGradients, sourceImages, gradientStates, destinationGradients)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBatchToCommandBuffer:sourceGradients:sourceImages:gradientStates:destinationGradients:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceGradients" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="sourceImages" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="gradientStates" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSState&gt;" />
        <Parameter Name="destinationGradients" Type="Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceGradients">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <param name="gradientStates">To be added.</param>
        <param name="destinationGradients">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KernelOffsetX">
      <MemberSignature Language="C#" Value="public virtual nint KernelOffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint KernelOffsetX" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnGradientKernel.KernelOffsetX" />
      <MemberSignature Language="F#" Value="member this.KernelOffsetX : nint with get, set" Usage="MetalPerformanceShaders.MPSCnnGradientKernel.KernelOffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("kernelOffsetX")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setKernelOffsetX:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KernelOffsetY">
      <MemberSignature Language="C#" Value="public virtual nint KernelOffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint KernelOffsetY" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSCnnGradientKernel.KernelOffsetY" />
      <MemberSignature Language="F#" Value="member this.KernelOffsetY : nint with get, set" Usage="MetalPerformanceShaders.MPSCnnGradientKernel.KernelOffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("kernelOffsetY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setKernelOffsetY:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
