<Type Name="MPSImage" FullName="MetalPerformanceShaders.MPSImage">
  <TypeSignature Language="C#" Value="public class MPSImage : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSImage extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSImage" />
  <TypeSignature Language="F#" Value="type MPSImage = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSImage", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An image that may contain more than 4 channels. (For example, an image in a layer of a convolutional neural network.)</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/reference/MetalPerformanceShaders/MPSImage">Apple documentation for <c>MPSImage</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSImage (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSImage : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSImage" Usage="new MetalPerformanceShaders.MPSImage t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSImage (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSImage : nativeint -&gt; MetalPerformanceShaders.MPSImage" Usage="new MetalPerformanceShaders.MPSImage handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSImage (Metal.IMTLDevice device, MetalPerformanceShaders.MPSImageDescriptor imageDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, class MetalPerformanceShaders.MPSImageDescriptor imageDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.#ctor(Metal.IMTLDevice,MetalPerformanceShaders.MPSImageDescriptor)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSImage : Metal.IMTLDevice * MetalPerformanceShaders.MPSImageDescriptor -&gt; MetalPerformanceShaders.MPSImage" Usage="new MetalPerformanceShaders.MPSImage (device, imageDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:imageDescriptor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="imageDescriptor" Type="MetalPerformanceShaders.MPSImageDescriptor" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="imageDescriptor">To be added.</param>
        <summary>Creates a new <see cref="T:MetalPerformanceShaders.MPSImage" /> for the specified <paramref name="device" /> with the specified <paramref name="imageDescriptor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSImage (Metal.IMTLTexture texture, nuint featureChannels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLTexture texture, valuetype System.nuint featureChannels) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.#ctor(Metal.IMTLTexture,System.nuint)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSImage : Metal.IMTLTexture * nuint -&gt; MetalPerformanceShaders.MPSImage" Usage="new MetalPerformanceShaders.MPSImage (texture, featureChannels)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithTexture:featureChannels:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="texture" Type="Metal.IMTLTexture" />
        <Parameter Name="featureChannels" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="featureChannels">To be added.</param>
        <summary>Creates a new <see cref="T:MetalPerformanceShaders.MPSImage" /> from the specified <paramref name="texture" /> with the specified <paramref name="featureChannels" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSImage (MetalPerformanceShaders.MPSImage parent, Foundation.NSRange sliceRange, nuint featureChannels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MetalPerformanceShaders.MPSImage parent, valuetype Foundation.NSRange sliceRange, valuetype System.nuint featureChannels) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.#ctor(MetalPerformanceShaders.MPSImage,Foundation.NSRange,System.nuint)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSImage : MetalPerformanceShaders.MPSImage * Foundation.NSRange * nuint -&gt; MetalPerformanceShaders.MPSImage" Usage="new MetalPerformanceShaders.MPSImage (parent, sliceRange, featureChannels)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithParentImage:sliceRange:featureChannels:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="MetalPerformanceShaders.MPSImage" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="sliceRange" Type="Foundation.NSRange" Index="1" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="featureChannels" Type="System.nuint" Index="2" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="sliceRange">To be added.</param>
        <param name="featureChannels">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchRepresentation">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; BatchRepresentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; BatchRepresentation" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.BatchRepresentation" />
      <MemberSignature Language="F#" Value="member this.BatchRepresentation : Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" Usage="MetalPerformanceShaders.MPSImage.BatchRepresentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("batchRepresentation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="MetalPerformanceShaders.MPSImage.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAllocator">
      <MemberSignature Language="C#" Value="public static MetalPerformanceShaders.IMPSImageAllocator DefaultAllocator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MetalPerformanceShaders.IMPSImageAllocator DefaultAllocator" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.DefaultAllocator" />
      <MemberSignature Language="F#" Value="member this.DefaultAllocator : MetalPerformanceShaders.IMPSImageAllocator" Usage="MetalPerformanceShaders.MPSImage.DefaultAllocator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("defaultAllocator")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSImageAllocator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Device">
      <MemberSignature Language="C#" Value="public virtual Metal.IMTLDevice Device { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Metal.IMTLDevice Device" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Device" />
      <MemberSignature Language="F#" Value="member this.Device : Metal.IMTLDevice" Usage="MetalPerformanceShaders.MPSImage.Device" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("device", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.IMTLDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Metal device for the image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureChannels">
      <MemberSignature Language="C#" Value="public virtual nuint FeatureChannels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint FeatureChannels" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.FeatureChannels" />
      <MemberSignature Language="F#" Value="member this.FeatureChannels : nuint" Usage="MetalPerformanceShaders.MPSImage.FeatureChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("featureChannels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of feature channels for the image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchRepresentation">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt; GetBatchRepresentation (Foundation.NSRange subRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; GetBatchRepresentation(valuetype Foundation.NSRange subRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.GetBatchRepresentation(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetBatchRepresentation : Foundation.NSRange -&gt; Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;&#xA;override this.GetBatchRepresentation : Foundation.NSRange -&gt; Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;" Usage="mPSImage.GetBatchRepresentation subRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("batchRepresentationWithSubRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSArray&lt;MetalPerformanceShaders.MPSImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subRange" Type="Foundation.NSRange" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="subRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubImage">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage GetSubImage (Foundation.NSRange featureChannelRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSImage GetSubImage(valuetype Foundation.NSRange featureChannelRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.GetSubImage(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetSubImage : Foundation.NSRange -&gt; MetalPerformanceShaders.MPSImage&#xA;override this.GetSubImage : Foundation.NSRange -&gt; MetalPerformanceShaders.MPSImage" Usage="mPSImage.GetSubImage featureChannelRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("subImageWithFeatureChannelRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureChannelRange" Type="Foundation.NSRange" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="featureChannelRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual nuint Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Height" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Height" />
      <MemberSignature Language="F#" Value="member this.Height : nuint" Usage="MetalPerformanceShaders.MPSImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("height")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public virtual string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Label" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="MetalPerformanceShaders.MPSImage.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("label")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLabel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the image object's label.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfImages">
      <MemberSignature Language="C#" Value="public virtual nuint NumberOfImages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfImages" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.NumberOfImages" />
      <MemberSignature Language="F#" Value="member this.NumberOfImages : nuint" Usage="MetalPerformanceShaders.MPSImage.NumberOfImages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("numberOfImages")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of images in a batch of images for processing.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.MPSImage Parent" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : MetalPerformanceShaders.MPSImage" Usage="MetalPerformanceShaders.MPSImage.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("parent", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public virtual Metal.MTLPixelFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Metal.MTLPixelFormat PixelFormat" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.PixelFormat" />
      <MemberSignature Language="F#" Value="member this.PixelFormat : Metal.MTLPixelFormat" Usage="MetalPerformanceShaders.MPSImage.PixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("pixelFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.MTLPixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets pixel format of the image texture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelSize">
      <MemberSignature Language="C#" Value="public virtual nuint PixelSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint PixelSize" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.PixelSize" />
      <MemberSignature Language="F#" Value="member this.PixelSize : nuint" Usage="MetalPerformanceShaders.MPSImage.PixelSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("pixelSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of bytes that are between the start of each pixel and the start of the next sequential pixel. (The stride for one pixel, in bytes.)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public virtual nuint Precision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Precision" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Precision" />
      <MemberSignature Language="F#" Value="member this.Precision : nuint" Usage="MetalPerformanceShaders.MPSImage.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("precision")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of bits of precision for each feature channel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBytes">
      <MemberSignature Language="C#" Value="public virtual void ReadBytes (IntPtr dataBytes, MetalPerformanceShaders.MPSDataLayout dataLayout, nuint imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadBytes(native int dataBytes, valuetype MetalPerformanceShaders.MPSDataLayout dataLayout, valuetype System.nuint imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.ReadBytes(System.IntPtr,MetalPerformanceShaders.MPSDataLayout,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ReadBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint -&gt; unit&#xA;override this.ReadBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint -&gt; unit" Usage="mPSImage.ReadBytes (dataBytes, dataLayout, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readBytes:dataLayout:imageIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBytes" Type="System.IntPtr" />
        <Parameter Name="dataLayout" Type="MetalPerformanceShaders.MPSDataLayout" />
        <Parameter Name="imageIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="dataBytes">To be added.</param>
        <param name="dataLayout">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBytes">
      <MemberSignature Language="C#" Value="public virtual void ReadBytes (IntPtr dataBytes, MetalPerformanceShaders.MPSDataLayout dataLayout, nuint bytesPerRow, Metal.MTLRegion region, MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, nuint imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadBytes(native int dataBytes, valuetype MetalPerformanceShaders.MPSDataLayout dataLayout, valuetype System.nuint bytesPerRow, valuetype Metal.MTLRegion region, valuetype MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, valuetype System.nuint imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.ReadBytes(System.IntPtr,MetalPerformanceShaders.MPSDataLayout,System.nuint,Metal.MTLRegion,MetalPerformanceShaders.MPSImageReadWriteParams,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ReadBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit&#xA;override this.ReadBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit" Usage="mPSImage.ReadBytes (dataBytes, dataLayout, bytesPerRow, region, featureChannelInfo, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBytes" Type="System.IntPtr" />
        <Parameter Name="dataLayout" Type="MetalPerformanceShaders.MPSDataLayout" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
        <Parameter Name="region" Type="Metal.MTLRegion" />
        <Parameter Name="featureChannelInfo" Type="MetalPerformanceShaders.MPSImageReadWriteParams" />
        <Parameter Name="imageIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="dataBytes">To be added.</param>
        <param name="dataLayout">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="region">To be added.</param>
        <param name="featureChannelInfo">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBytes">
      <MemberSignature Language="C#" Value="public virtual void ReadBytes (IntPtr dataBytes, MetalPerformanceShaders.MPSDataLayout dataLayout, nuint bytesPerRow, nuint bytesPerImage, Metal.MTLRegion region, MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, nuint imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadBytes(native int dataBytes, valuetype MetalPerformanceShaders.MPSDataLayout dataLayout, valuetype System.nuint bytesPerRow, valuetype System.nuint bytesPerImage, valuetype Metal.MTLRegion region, valuetype MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, valuetype System.nuint imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.ReadBytes(System.IntPtr,MetalPerformanceShaders.MPSDataLayout,System.nuint,System.nuint,Metal.MTLRegion,MetalPerformanceShaders.MPSImageReadWriteParams,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member ReadBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit&#xA;override this.ReadBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit" Usage="mPSImage.ReadBytes (dataBytes, dataLayout, bytesPerRow, bytesPerImage, region, featureChannelInfo, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBytes" Type="System.IntPtr" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="dataLayout" Type="MetalPerformanceShaders.MPSDataLayout" Index="1" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="bytesPerRow" Type="System.nuint" Index="2" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="bytesPerImage" Type="System.nuint" Index="3" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="region" Type="Metal.MTLRegion" Index="4" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="featureChannelInfo" Type="MetalPerformanceShaders.MPSImageReadWriteParams" Index="5" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="imageIndex" Type="System.nuint" Index="6" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="dataBytes">To be added.</param>
        <param name="dataLayout">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="bytesPerImage">To be added.</param>
        <param name="region">To be added.</param>
        <param name="featureChannelInfo">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSize">
      <MemberSignature Language="C#" Value="public virtual nuint ResourceSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint ResourceSize" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.ResourceSize" />
      <MemberSignature Language="F#" Value="member this.ResourceSize : nuint" Usage="MetalPerformanceShaders.MPSImage.ResourceSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("resourceSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPurgeableState">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSPurgeableState SetPurgeableState (MetalPerformanceShaders.MPSPurgeableState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MetalPerformanceShaders.MPSPurgeableState SetPurgeableState(valuetype MetalPerformanceShaders.MPSPurgeableState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.SetPurgeableState(MetalPerformanceShaders.MPSPurgeableState)" />
      <MemberSignature Language="F#" Value="abstract member SetPurgeableState : MetalPerformanceShaders.MPSPurgeableState -&gt; MetalPerformanceShaders.MPSPurgeableState&#xA;override this.SetPurgeableState : MetalPerformanceShaders.MPSPurgeableState -&gt; MetalPerformanceShaders.MPSPurgeableState" Usage="mPSImage.SetPurgeableState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setPurgeableState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSPurgeableState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="MetalPerformanceShaders.MPSPurgeableState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Sets the purgeable state of the underlying texture for the image.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public virtual void Synchronize (Metal.IMTLCommandBuffer commandBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Synchronize(class Metal.IMTLCommandBuffer commandBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.Synchronize(Metal.IMTLCommandBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Synchronize : Metal.IMTLCommandBuffer -&gt; unit&#xA;override this.Synchronize : Metal.IMTLCommandBuffer -&gt; unit" Usage="mPSImage.Synchronize commandBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("synchronizeOnCommandBuffer:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public virtual Metal.IMTLTexture Texture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Metal.IMTLTexture Texture" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Texture" />
      <MemberSignature Language="F#" Value="member this.Texture : Metal.IMTLTexture" Usage="MetalPerformanceShaders.MPSImage.Texture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("texture")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the underlying texture for the image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureType">
      <MemberSignature Language="C#" Value="public virtual Metal.MTLTextureType TextureType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Metal.MTLTextureType TextureType" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.TextureType" />
      <MemberSignature Language="F#" Value="member this.TextureType : Metal.MTLTextureType" Usage="MetalPerformanceShaders.MPSImage.TextureType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textureType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.MTLTextureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the underlying texture for the image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="C#" Value="public virtual Metal.MTLTextureUsage Usage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Metal.MTLTextureUsage Usage" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Usage" />
      <MemberSignature Language="F#" Value="member this.Usage : Metal.MTLTextureUsage" Usage="MetalPerformanceShaders.MPSImage.Usage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("usage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.MTLTextureUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the intended use of the image's underlying texture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual nuint Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Width" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSImage.Width" />
      <MemberSignature Language="F#" Value="member this.Width : nuint" Usage="MetalPerformanceShaders.MPSImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("width")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBytes">
      <MemberSignature Language="C#" Value="public virtual void WriteBytes (IntPtr dataBytes, MetalPerformanceShaders.MPSDataLayout dataLayout, nuint imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBytes(native int dataBytes, valuetype MetalPerformanceShaders.MPSDataLayout dataLayout, valuetype System.nuint imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.WriteBytes(System.IntPtr,MetalPerformanceShaders.MPSDataLayout,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member WriteBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint -&gt; unit&#xA;override this.WriteBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint -&gt; unit" Usage="mPSImage.WriteBytes (dataBytes, dataLayout, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeBytes:dataLayout:imageIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBytes" Type="System.IntPtr" />
        <Parameter Name="dataLayout" Type="MetalPerformanceShaders.MPSDataLayout" />
        <Parameter Name="imageIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="dataBytes">To be added.</param>
        <param name="dataLayout">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBytes">
      <MemberSignature Language="C#" Value="public virtual void WriteBytes (IntPtr dataBytes, MetalPerformanceShaders.MPSDataLayout dataLayout, nuint bytesPerRow, Metal.MTLRegion region, MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, nuint imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBytes(native int dataBytes, valuetype MetalPerformanceShaders.MPSDataLayout dataLayout, valuetype System.nuint bytesPerRow, valuetype Metal.MTLRegion region, valuetype MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, valuetype System.nuint imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.WriteBytes(System.IntPtr,MetalPerformanceShaders.MPSDataLayout,System.nuint,Metal.MTLRegion,MetalPerformanceShaders.MPSImageReadWriteParams,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member WriteBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit&#xA;override this.WriteBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit" Usage="mPSImage.WriteBytes (dataBytes, dataLayout, bytesPerRow, region, featureChannelInfo, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBytes" Type="System.IntPtr" />
        <Parameter Name="dataLayout" Type="MetalPerformanceShaders.MPSDataLayout" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
        <Parameter Name="region" Type="Metal.MTLRegion" />
        <Parameter Name="featureChannelInfo" Type="MetalPerformanceShaders.MPSImageReadWriteParams" />
        <Parameter Name="imageIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="dataBytes">To be added.</param>
        <param name="dataLayout">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="region">To be added.</param>
        <param name="featureChannelInfo">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBytes">
      <MemberSignature Language="C#" Value="public virtual void WriteBytes (IntPtr dataBytes, MetalPerformanceShaders.MPSDataLayout dataLayout, nuint bytesPerRow, nuint bytesPerImage, Metal.MTLRegion region, MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, nuint imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBytes(native int dataBytes, valuetype MetalPerformanceShaders.MPSDataLayout dataLayout, valuetype System.nuint bytesPerRow, valuetype System.nuint bytesPerImage, valuetype Metal.MTLRegion region, valuetype MetalPerformanceShaders.MPSImageReadWriteParams featureChannelInfo, valuetype System.nuint imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSImage.WriteBytes(System.IntPtr,MetalPerformanceShaders.MPSDataLayout,System.nuint,System.nuint,Metal.MTLRegion,MetalPerformanceShaders.MPSImageReadWriteParams,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member WriteBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit&#xA;override this.WriteBytes : nativeint * MetalPerformanceShaders.MPSDataLayout * nuint * nuint * Metal.MTLRegion * MetalPerformanceShaders.MPSImageReadWriteParams * nuint -&gt; unit" Usage="mPSImage.WriteBytes (dataBytes, dataLayout, bytesPerRow, bytesPerImage, region, featureChannelInfo, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, 4, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBytes" Type="System.IntPtr" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="dataLayout" Type="MetalPerformanceShaders.MPSDataLayout" Index="1" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="bytesPerRow" Type="System.nuint" Index="2" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="bytesPerImage" Type="System.nuint" Index="3" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="region" Type="Metal.MTLRegion" Index="4" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="featureChannelInfo" Type="MetalPerformanceShaders.MPSImageReadWriteParams" Index="5" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="imageIndex" Type="System.nuint" Index="6" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="dataBytes">To be added.</param>
        <param name="dataLayout">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="bytesPerImage">To be added.</param>
        <param name="region">To be added.</param>
        <param name="featureChannelInfo">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
