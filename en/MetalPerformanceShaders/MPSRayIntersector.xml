<Type Name="MPSRayIntersector" FullName="MetalPerformanceShaders.MPSRayIntersector">
  <TypeSignature Language="C#" Value="public class MPSRayIntersector : MetalPerformanceShaders.MPSKernel, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSRayIntersector extends MetalPerformanceShaders.MPSKernel implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:MetalPerformanceShaders.MPSRayIntersector" />
  <TypeSignature Language="F#" Value="type MPSRayIntersector = class&#xA;    inherit MPSKernel&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSKernel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSRayIntersector", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRayIntersector (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSRayIntersector : Foundation.NSCoder -&gt; MetalPerformanceShaders.MPSRayIntersector" Usage="new MetalPerformanceShaders.MPSRayIntersector coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSRayIntersector (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSRayIntersector : Foundation.NSObjectFlag -&gt; MetalPerformanceShaders.MPSRayIntersector" Usage="new MetalPerformanceShaders.MPSRayIntersector t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRayIntersector (Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.#ctor(Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSRayIntersector : Metal.IMTLDevice -&gt; MetalPerformanceShaders.MPSRayIntersector" Usage="new MetalPerformanceShaders.MPSRayIntersector device" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MPSRayIntersector (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSRayIntersector : nativeint -&gt; MetalPerformanceShaders.MPSRayIntersector" Usage="new MetalPerformanceShaders.MPSRayIntersector handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRayIntersector (Foundation.NSCoder aDecoder, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder aDecoder, class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.#ctor(Foundation.NSCoder,Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="new MetalPerformanceShaders.MPSRayIntersector : Foundation.NSCoder * Metal.IMTLDevice -&gt; MetalPerformanceShaders.MPSRayIntersector" Usage="new MetalPerformanceShaders.MPSRayIntersector (aDecoder, device)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aDecoder" Type="Foundation.NSCoder" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="aDecoder">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingBoxIntersectionTestType">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSBoundingBoxIntersectionTestType BoundingBoxIntersectionTestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MetalPerformanceShaders.MPSBoundingBoxIntersectionTestType BoundingBoxIntersectionTestType" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.BoundingBoxIntersectionTestType" />
      <MemberSignature Language="F#" Value="member this.BoundingBoxIntersectionTestType : MetalPerformanceShaders.MPSBoundingBoxIntersectionTestType with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.BoundingBoxIntersectionTestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("boundingBoxIntersectionTestType", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBoundingBoxIntersectionTestType:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSBoundingBoxIntersectionTestType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="MetalPerformanceShaders.MPSRayIntersector.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="mPSRayIntersector.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSRayIntersector Copy (Foundation.NSZone zone, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSRayIntersector Copy(class Foundation.NSZone zone, class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.Copy(Foundation.NSZone,Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone * Metal.IMTLDevice -&gt; MetalPerformanceShaders.MPSRayIntersector" Usage="mPSRayIntersector.Copy (zone, device)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSRayIntersector</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>ObjCRuntime.Release</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CullMode">
      <MemberSignature Language="C#" Value="public virtual Metal.MTLCullMode CullMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Metal.MTLCullMode CullMode" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.CullMode" />
      <MemberSignature Language="F#" Value="member this.CullMode : Metal.MTLCullMode with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.CullMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("cullMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setCullMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.MTLCullMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.Encode(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Foundation.NSCoder -&gt; unit&#xA;override this.Encode : Foundation.NSCoder -&gt; unit" Usage="mPSRayIntersector.Encode coder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeIntersection">
      <MemberSignature Language="C#" Value="public virtual void EncodeIntersection (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSIntersectionType intersectionType, Metal.IMTLBuffer rayBuffer, nuint rayBufferOffset, Metal.IMTLBuffer intersectionBuffer, nuint intersectionBufferOffset, nuint rayCount, MetalPerformanceShaders.MPSAccelerationStructure accelerationStructure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeIntersection(class Metal.IMTLCommandBuffer commandBuffer, valuetype MetalPerformanceShaders.MPSIntersectionType intersectionType, class Metal.IMTLBuffer rayBuffer, valuetype System.nuint rayBufferOffset, class Metal.IMTLBuffer intersectionBuffer, valuetype System.nuint intersectionBufferOffset, valuetype System.nuint rayCount, class MetalPerformanceShaders.MPSAccelerationStructure accelerationStructure) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.EncodeIntersection(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSIntersectionType,Metal.IMTLBuffer,System.nuint,Metal.IMTLBuffer,System.nuint,System.nuint,MetalPerformanceShaders.MPSAccelerationStructure)" />
      <MemberSignature Language="F#" Value="abstract member EncodeIntersection : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSIntersectionType * Metal.IMTLBuffer * nuint * Metal.IMTLBuffer * nuint * nuint * MetalPerformanceShaders.MPSAccelerationStructure -&gt; unit&#xA;override this.EncodeIntersection : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSIntersectionType * Metal.IMTLBuffer * nuint * Metal.IMTLBuffer * nuint * nuint * MetalPerformanceShaders.MPSAccelerationStructure -&gt; unit" Usage="mPSRayIntersector.EncodeIntersection (commandBuffer, intersectionType, rayBuffer, rayBufferOffset, intersectionBuffer, intersectionBufferOffset, rayCount, accelerationStructure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="intersectionType" Type="MetalPerformanceShaders.MPSIntersectionType" />
        <Parameter Name="rayBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="rayBufferOffset" Type="System.nuint" />
        <Parameter Name="intersectionBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="intersectionBufferOffset" Type="System.nuint" />
        <Parameter Name="rayCount" Type="System.nuint" />
        <Parameter Name="accelerationStructure" Type="MetalPerformanceShaders.MPSAccelerationStructure" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="intersectionType">To be added.</param>
        <param name="rayBuffer">To be added.</param>
        <param name="rayBufferOffset">To be added.</param>
        <param name="intersectionBuffer">To be added.</param>
        <param name="intersectionBufferOffset">To be added.</param>
        <param name="rayCount">To be added.</param>
        <param name="accelerationStructure">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeIntersection">
      <MemberSignature Language="C#" Value="public virtual void EncodeIntersection (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSIntersectionType intersectionType, Metal.IMTLBuffer rayBuffer, nuint rayBufferOffset, Metal.IMTLBuffer intersectionBuffer, nuint intersectionBufferOffset, Metal.IMTLBuffer rayCountBuffer, nuint rayCountBufferOffset, MetalPerformanceShaders.MPSAccelerationStructure accelerationStructure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeIntersection(class Metal.IMTLCommandBuffer commandBuffer, valuetype MetalPerformanceShaders.MPSIntersectionType intersectionType, class Metal.IMTLBuffer rayBuffer, valuetype System.nuint rayBufferOffset, class Metal.IMTLBuffer intersectionBuffer, valuetype System.nuint intersectionBufferOffset, class Metal.IMTLBuffer rayCountBuffer, valuetype System.nuint rayCountBufferOffset, class MetalPerformanceShaders.MPSAccelerationStructure accelerationStructure) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.EncodeIntersection(Metal.IMTLCommandBuffer,MetalPerformanceShaders.MPSIntersectionType,Metal.IMTLBuffer,System.nuint,Metal.IMTLBuffer,System.nuint,Metal.IMTLBuffer,System.nuint,MetalPerformanceShaders.MPSAccelerationStructure)" />
      <MemberSignature Language="F#" Value="abstract member EncodeIntersection : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSIntersectionType * Metal.IMTLBuffer * nuint * Metal.IMTLBuffer * nuint * Metal.IMTLBuffer * nuint * MetalPerformanceShaders.MPSAccelerationStructure -&gt; unit&#xA;override this.EncodeIntersection : Metal.IMTLCommandBuffer * MetalPerformanceShaders.MPSIntersectionType * Metal.IMTLBuffer * nuint * Metal.IMTLBuffer * nuint * Metal.IMTLBuffer * nuint * MetalPerformanceShaders.MPSAccelerationStructure -&gt; unit" Usage="mPSRayIntersector.EncodeIntersection (commandBuffer, intersectionType, rayBuffer, rayBufferOffset, intersectionBuffer, intersectionBufferOffset, rayCountBuffer, rayCountBufferOffset, accelerationStructure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCountBuffer:rayCountBufferOffset:accelerationStructure:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="intersectionType" Type="MetalPerformanceShaders.MPSIntersectionType" />
        <Parameter Name="rayBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="rayBufferOffset" Type="System.nuint" />
        <Parameter Name="intersectionBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="intersectionBufferOffset" Type="System.nuint" />
        <Parameter Name="rayCountBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="rayCountBufferOffset" Type="System.nuint" />
        <Parameter Name="accelerationStructure" Type="MetalPerformanceShaders.MPSAccelerationStructure" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="intersectionType">To be added.</param>
        <param name="rayBuffer">To be added.</param>
        <param name="rayBufferOffset">To be added.</param>
        <param name="intersectionBuffer">To be added.</param>
        <param name="intersectionBufferOffset">To be added.</param>
        <param name="rayCountBuffer">To be added.</param>
        <param name="rayCountBufferOffset">To be added.</param>
        <param name="accelerationStructure">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrontFacingWinding">
      <MemberSignature Language="C#" Value="public virtual Metal.MTLWinding FrontFacingWinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Metal.MTLWinding FrontFacingWinding" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.FrontFacingWinding" />
      <MemberSignature Language="F#" Value="member this.FrontFacingWinding : Metal.MTLWinding with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.FrontFacingWinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("frontFacingWinding", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFrontFacingWinding:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.MTLWinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecommendedMinimumRayBatchSize">
      <MemberSignature Language="C#" Value="public virtual nuint GetRecommendedMinimumRayBatchSize (nuint rayCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint GetRecommendedMinimumRayBatchSize(valuetype System.nuint rayCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalPerformanceShaders.MPSRayIntersector.GetRecommendedMinimumRayBatchSize(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetRecommendedMinimumRayBatchSize : nuint -&gt; nuint&#xA;override this.GetRecommendedMinimumRayBatchSize : nuint -&gt; nuint" Usage="mPSRayIntersector.GetRecommendedMinimumRayBatchSize rayCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("recommendedMinimumRayBatchSizeForRayCount:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rayCount" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="rayCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectionDataType">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSIntersectionDataType IntersectionDataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MetalPerformanceShaders.MPSIntersectionDataType IntersectionDataType" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.IntersectionDataType" />
      <MemberSignature Language="F#" Value="member this.IntersectionDataType : MetalPerformanceShaders.MPSIntersectionDataType with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.IntersectionDataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("intersectionDataType", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setIntersectionDataType:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSIntersectionDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectionStride">
      <MemberSignature Language="C#" Value="public virtual nuint IntersectionStride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint IntersectionStride" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.IntersectionStride" />
      <MemberSignature Language="F#" Value="member this.IntersectionStride : nuint with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.IntersectionStride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("intersectionStride")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setIntersectionStride:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RayDataType">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSRayDataType RayDataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MetalPerformanceShaders.MPSRayDataType RayDataType" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.RayDataType" />
      <MemberSignature Language="F#" Value="member this.RayDataType : MetalPerformanceShaders.MPSRayDataType with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.RayDataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rayDataType", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRayDataType:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSRayDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RayMaskOptions">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSRayMaskOptions RayMaskOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MetalPerformanceShaders.MPSRayMaskOptions RayMaskOptions" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.RayMaskOptions" />
      <MemberSignature Language="F#" Value="member this.RayMaskOptions : MetalPerformanceShaders.MPSRayMaskOptions with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.RayMaskOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rayMaskOptions", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRayMaskOptions:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSRayMaskOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RayStride">
      <MemberSignature Language="C#" Value="public virtual nuint RayStride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint RayStride" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.RayStride" />
      <MemberSignature Language="F#" Value="member this.RayStride : nuint with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.RayStride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rayStride")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRayStride:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TriangleIntersectionTestType">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSTriangleIntersectionTestType TriangleIntersectionTestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MetalPerformanceShaders.MPSTriangleIntersectionTestType TriangleIntersectionTestType" />
      <MemberSignature Language="DocId" Value="P:MetalPerformanceShaders.MPSRayIntersector.TriangleIntersectionTestType" />
      <MemberSignature Language="F#" Value="member this.TriangleIntersectionTestType : MetalPerformanceShaders.MPSTriangleIntersectionTestType with get, set" Usage="MetalPerformanceShaders.MPSRayIntersector.TriangleIntersectionTestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("triangleIntersectionTestType", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTriangleIntersectionTestType:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSTriangleIntersectionTestType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
