<Type Name="GKChallengeComposeResult" FullName="GameKit.GKChallengeComposeResult">
  <TypeSignature Language="C#" Value="public class GKChallengeComposeResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GKChallengeComposeResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:GameKit.GKChallengeComposeResult" />
  <TypeSignature Language="F#" Value="type GKChallengeComposeResult = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Holds the return values from the asynchronous method <see cref="M:GameKit.GKAchievement.ChallengeComposeControllerAsync(System.String,GameKit.GKPlayer[],UIKit.UIViewController@)" />.</summary>
    <remarks>
      <para>This class holds the return values from the asynchronous method <see cref="M:GameKit.GKAchievement.ChallengeComposeControllerAsync(System.String,GameKit.GKPlayer[],UIKit.UIViewController@)" />.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKChallengeComposeResult (AppKit.NSViewController composeController, bool issuedChallenge, string[] sentPlayerIDs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AppKit.NSViewController composeController, bool issuedChallenge, string[] sentPlayerIDs) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKChallengeComposeResult.#ctor(AppKit.NSViewController,System.Boolean,System.String[])" />
      <MemberSignature Language="F#" Value="new GameKit.GKChallengeComposeResult : AppKit.NSViewController * bool * string[] -&gt; GameKit.GKChallengeComposeResult" Usage="new GameKit.GKChallengeComposeResult (composeController, issuedChallenge, sentPlayerIDs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="composeController" Type="AppKit.NSViewController" Index="0" FrameworkAlternate="xamarin-mac-sdk-14" />
        <Parameter Name="issuedChallenge" Type="System.Boolean" Index="1" FrameworkAlternate="xamarin-mac-sdk-14" />
        <Parameter Name="sentPlayerIDs" Type="System.String[]" Index="2" FrameworkAlternate="xamarin-mac-sdk-14" />
      </Parameters>
      <Docs>
        <param name="composeController">To be added.</param>
        <param name="issuedChallenge">To be added.</param>
        <param name="sentPlayerIDs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKChallengeComposeResult (UIKit.UIViewController composeController, bool issuedChallenge, string[] sentPlayerIDs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class UIKit.UIViewController composeController, bool issuedChallenge, string[] sentPlayerIDs) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKChallengeComposeResult.#ctor(UIKit.UIViewController,System.Boolean,System.String[])" />
      <MemberSignature Language="F#" Value="new GameKit.GKChallengeComposeResult : UIKit.UIViewController * bool * string[] -&gt; GameKit.GKChallengeComposeResult" Usage="new GameKit.GKChallengeComposeResult (composeController, issuedChallenge, sentPlayerIDs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="composeController" Type="UIKit.UIViewController" Index="0" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="issuedChallenge" Type="System.Boolean" Index="1" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="sentPlayerIDs" Type="System.String[]" Index="2" FrameworkAlternate="xamarin-ios-sdk-12" />
      </Parameters>
      <Docs>
        <param name="composeController">Result value from the async operation</param>
        <param name="issuedChallenge">Result value from the async operation</param>
        <param name="sentPlayerIDs">Result value from the async operation</param>
        <summary>Constructs an instance of GameKit.GKChallengeComposeResult</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeController">
      <MemberSignature Language="C#" Value="public AppKit.NSViewController ComposeController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AppKit.NSViewController ComposeController" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKChallengeComposeResult.ComposeController" />
      <MemberSignature Language="F#" Value="member this.ComposeController : AppKit.NSViewController with get, set" Usage="GameKit.GKChallengeComposeResult.ComposeController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AppKit.NSViewController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the challenge view controller.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuedChallenge">
      <MemberSignature Language="C#" Value="public bool IssuedChallenge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IssuedChallenge" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKChallengeComposeResult.IssuedChallenge" />
      <MemberSignature Language="F#" Value="member this.IssuedChallenge : bool with get, set" Usage="GameKit.GKChallengeComposeResult.IssuedChallenge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that tells whether the challenge was sent.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentPlayerIDs">
      <MemberSignature Language="C#" Value="public string[] SentPlayerIDs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SentPlayerIDs" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKChallengeComposeResult.SentPlayerIDs" />
      <MemberSignature Language="F#" Value="member this.SentPlayerIDs : string[] with get, set" Usage="GameKit.GKChallengeComposeResult.SentPlayerIDs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the list of IDs for the players to whom the challenge was sent.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
